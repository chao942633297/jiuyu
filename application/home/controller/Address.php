<?php

namespace app\home\controller;

use think\Controller;
use think\Db;
use think\Loader;
use think\Request;

class Address extends Base
{

    protected $userId;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->userId = session('home_user_id');
    }


    /**
     * @return \think\response\Json
     * 收货地址列表
     */
    public function index()
    {
        $address = Db::table('sql_address')
            ->field('id,consignee,mobile,province,city,area,detail,is_default')
            ->where('uid', $this->userId)
            ->order('is_default', 'desc')->select();
        $jump_web = self::jump_web();
        return json(['data' => $address,'jump_web'=>$jump_web, 'msg' => '查询成功', 'code' => 200]);
    }


    /**
     * @param Request $request
     * @return \think\response\Json
     * 增加收货地址
     * 传入是否默认 is_default 0非默认 1默认
     */
    public function addAddr(Request $request)
    {
        $input = $request->post();
        $validate = Loader::validate('Address');
        if (!$validate->check($input)) {
            return json(['msg' => $validate->getError(), 'code' => 1001]);
        }
        $input['uid'] = $this->userId;
        $input['created_at'] = date('YmdHis');
        if(isset($input['is_default']) && $input['is_default'] == 1){
            Db::table('sql_address')->where('uid',$this->userId)->update(['is_default'=>0,'created_at'=>date('YmdHis')]);
        }
        $res = Db::table('sql_address')->insert($input);
        if($res){
            return json(['msg' =>'添加成功', 'code' => 200]);
        }
        return json(['msg' =>'添加失败', 'code' => 1001]);
    }


    /**
     * @param Request $request
     * @return \think\response\Json
     * 编辑收货地址页面
     */
    public function webEditAddr(Request $request){
        $addrId = $request->param('addrId');
        if(empty($addrId)){
            return json(['msg'=>'参数错误','code'=>1001]);
        }
        $address = Db::table('sql_address')
            ->field('id,consignee,mobile,province,city,area,detail')
            ->where('id',$addrId)->find();
        return json(['data'=>$address,'msg'=>'查询成功','code'=>200]);
    }


    /**
     * @param Request $request
     * @return \think\response\Json
     * @throws \think\Exception
     * 执行编辑收货地址
     */
    public function actEditAddr(Request $request){
        $input = $request->post();
        if(empty($input['id'])){
            return json(['msg'=>'参数错误','code'=>1001]);
        }
        $validate = Loader::validate('Address');
        if (!$validate->scene('update')->check($input)) {
            return json(['msg' => $validate->getError(), 'code' => 1001]);
        }
        $input['updated_at'] = date('YmdHis');
        if(isset($input['is_default']) && $input['is_default'] == 1){
            Db::table('sql_address')->where('uid',$this->userId)->update(['is_default'=>0,'created_at'=>date('YmdHis')]);
        }
        $res = Db::table('sql_address')->update($input);
        if($res){
            return json(['msg'=>'编辑成功','code'=>200]);
        }
        return json(['msg'=>'编辑失败','code'=>1002]);
    }


    /*
     * 设置默认地址
     */
    public function setDefault(Request $request){
        $addrId = $request->param('addrId');
        if(empty($addrId)){
            return json(['msg'=>'参数错误','code'=>1001]);
        }
        $res = Db::table('sql_address')->where('uid',$this->userId)->update(['is_default'=>0,'created_at'=>date('YmdHis')]);
        if($res){
            Db::table('sql_address')->where('id',$addrId)->update(['is_default'=>1,'updated_at'=>date('YmdHis')]);
        }
        return json(['msg'=>'设置成功','code'=>200]);
    }



    /**
     * @param Request $request
     * 删除收货地址
     */
    public function delAddr(Request $request)
    {
        $addrId = $request->param('addrId');
        if (empty($addrId)) {
            return json(['msg' => '参数错误', 'code' => 1001]);
        }
        $addr = Db::table('sql_address')->where('id', $addrId)->find();
     /*   if ($addr['is_default'] == 1) {
            return json(['msg' => '默认地址暂不能删除', 'code' => 1002]);
        }*/
        $res = Db::table('sql_address')->where('id', $addrId)->delete();
        if ($res) {
            return json(['msg' => '删除成功', 'code' => 200]);
        }
        return json(['msg' => '删除失败', 'code' => 200]);
    }


    /**
     * @return int
     * 判断跳转页面
     */
    public static function jump_web(){
        if(session('home_package_id')){        //跳转套餐提交订单
            return 101;
        }else if(session('home_car_id')){      //跳转购车提交订单
            return 102;
        }
        return 100;
    }



}