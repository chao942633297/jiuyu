<?php

namespace app\home\controller;

use app\backsystem\model\AccountModel;
use app\backsystem\model\GoodsModel;
use app\backsystem\model\OrderModel;
use app\backsystem\model\UserModel;
use think\Controller;
use think\Db;
use think\Exception;
use think\Loader;
use think\Request;

class Buycar extends Base
{
    protected $userId;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->userId = session('home_user_id');
    }

    //我要购车页面
    public function index(Request $request){
        //一个账号只能购买一辆车
        $count = db('order')->where('uid',$this->userId)->count();
        if($count >= 1){
            return json(['msg'=>'一个账号只能购买一辆车','code'=>1001]);
        }
        if($request->has('carId')){
            $carId = $request->param('carId');
            $goods = GoodsModel::get($carId);
            $return['carName'] = $goods->name;
            $return['carPrice'] = $goods->price;
        }
        $return['balance'] = db('users')->where('id',$this->userId)->value('balance');
        return json(['data'=>$return,'id'=>$this->userId,'msg'=>'查询成功','code'=>200]);
    }


    //执行我要购车
    public function actBuyCar(Request $request){
        //一个账号只能购买一辆车
        $count = db('order')->where('uid',$this->userId)->count();
        if($count >= 1){
            return json(['msg'=>'一个账号只能购买一辆车','code'=>1001]);
        }
        //执行购买车辆
        $input = $request->post();
        $validate = Loader::validate('Goods');
        if(!$validate->check($input)){
           return json(['msg'=>$validate->getError(),'code'=>1001]);
        }
        $good = GoodsModel::get($input['goodId']);
        if(!$good){
            return json(['msg'=>'所选车型不存在','code'=>1002]);
        }
        $user = UserModel::get($this->userId);
        if($user->two_password !== md5($input['password'])){
            return json(['msg'=>'支付密码不正确','code'=>1003]);
        }
        if($good->price > $user->balance){
            return json(['msg'=>'余额不足,请选购其他车辆','code'=>1004]);
        }else if($good->price < 0){
            return json(['msg'=>'车辆金额错误','code'=>1006]);
        }
        Db::startTrans();
        try{
            //扣除用户余额
            UserModel::get($this->userId)->setDec('balance',$good->price);
            //增加用户余额消费记录
            $list = AccountModel::getAccountData($this->userId,$good->price,'购买车辆',7,2);
            AccountModel::create($list);
            //添加订单
            $data = [];
            $data['uid'] = $this->userId;
            $data['order_sn'] = orderNum();
            $data['buyer_name'] = $input['buyer_name'];
            $data['buyer_phone'] = $input['buyer_phone'];
            $data['price'] = $good['price'];
            $data['good_name'] = $good['name'];
            $data['good_img'] = $good['img'];
            $data['good_price'] = $good['price'];
            $data['status'] = 1;
            $data['payment'] = 3;
            $data['created_at'] = date('YmdHis');
            OrderModel::create($data);
            Db::commit();
            return json(['msg'=>'提交购车成功','code'=>200]);
        }catch(Exception $e){
            Db::rollback();
            return json(['msg'=>$e->getMessage(),'code'=>1005]);
        }
    }


    //我的订单/购车订单
    public function myOrder(){
        $orders = OrderModel::get(function($query){
            $query->order('id','desc');
            $query->field('id,buyer_name,buyer_phone,good_name,good_price,good_img,price,status');
            $query->where(['uid'=>$this->userId]);
        });
        return json(['data'=>$orders,'msg'=>'查询成功','code'=>200]);
    }

}
